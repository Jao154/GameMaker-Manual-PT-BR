<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>interruptor</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the switch function" />
  <meta name="rh-index-keywords" content="switch,case" />
  <meta name="search-keywords" content="switch,default" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>interruptor</h1>
  <p>Em várias situações, você quer deixar que suas instâncias executem ações diferentes, dependendo de um valor particular. Você pode fazer isso usando uma série de <a href="If_Else_and_Conditional_Operators.htm"><span class="inline">if / else</span></a> mas, quando as escolhas possíveis ficam acima de duas ou três, geralmente é mais fácil usar a declaração <span class="inline">switch</span>.</p>
  <p>Uma declaração em <span class="inline">switch</span> tem a seguinte sintaxe:</p>
  <p class="code">switch (&lt;expression&gt;)<br />
    {<br />
        case &lt;constant1&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
    <br />
        case &lt;constant2&gt;:<br />
            &lt;code&gt;<br />
        break;<br />
        <br />
        // more cases (with breaks)<br />
    <br />
        default:<br />
            &lt;code&gt;;<br />
    }
  </p>
  <p>Isto funciona da seguinte forma:</p>
  <ul class="colour">
    <li>Primeiro a <a class="glossterm" data-glossterm="expressão" href="#">expressão</a> é executada.</li>
    <li>Em seguida, seu resultado é comparado com as diferentes constantes após cada uma das<span class="glossextra">declarações</span> <span class="inline">case</span>. Quando dizemos &quot;constante&quot;, o que queremos dizer é que o valor no caso não pode ser uma expressão variável e deve ser um valor fixo de qualquer <a href="../Data_Types.htm">tipo de dado</a>, como <span class="inline2">&quot;luta</span> &quot; ou <span class="inline2">3</span> ou a palavra-chave <span class="inline2"><span class="inline"><a href="../Instance_Keywords.htm">noone</a></span></span>. </li>
    <li>A execução começa a partir da primeira declaração <span class="inline">case</span> com o valor correspondente, <i>até que uma declaração <a href="break.htm"><span class="notranslate">break</span></a> seja encontrada</i>.</li>
    <li>Se nenhuma declaração <span class="inline">case</span> tiver o valor correspondente, então a declaração <span class="inline">default</span> será executada. Não é necessário ter uma declaração <span class="inline">default</span>, e se nenhuma declaração for fornecida, então nenhuma ação será tomada quando não houver casos correspondentes. A declaração <span class="inline">default</span> pode ser colocada em qualquer lugar em um bloco <span class="notranslate">switch</span>, porém é tradicionalmente colocada na parte inferior, depois de todos os casos.</li>
  </ul>
  <p class="note"><span class="note">NOTA</span> A declaração <span class="notranslate">switch</span> continuará a executar o código dentro de um <span class="inline">case</span>, até que um <span class="inline">break</span> seja encontrado. Se você não usar <span class="inline">break</span>s no final de seus casos, fará com que o <span class="notranslate">switch</span> &quot;vaze&quot; para o próximo <span class="inline">case</span>, e até mesmo para uma seção <span class="inline">default</span>, se não houver <span class="inline">break</span>s no caminho. Isto pode causar um comportamento não intencional, pois a execução de um <span class="inline">case</span> pode resultar na execução de vários <span class="inline">case</span>s, portanto, assegure-se de usar <span class="inline">break</span> quando apropriado.</p>
  <p>Um exemplo simples de utilização de uma declaração <span class="notranslate">switch</span> seria algo parecido com isto:</p>
  <p class="code">switch (player_lives)<br />
    {<br />
        case 3:<br />
            draw_sprite(20, 20, spr_face_healthy);<br />
        break;<br />
    <br />
        case 2:<br />
            draw_sprite(20, 20, spr_face_hurt);<br />
        break;<br />
    <br />
        case 1:<br />
            draw_sprite(20, 20, spr_face_fatal);<br />
        break;<br />
    <br />
        default:<br />
            draw_sprite(20, 20, spr_face_fainted);<br />
        break;<br />
    }
  </p>
  <p>Note que várias declarações <span class="inline">case</span> podem ser usadas para executar a mesma declaração, pois o <span class="inline">break</span> nem sempre é necessário para cada <span class="inline">case</span>. Se não houver nenhuma declaração <span class="inline">break</span> para um determinado <span class="inline">case</span>, a execução simplesmente continua com o código para o próximo caso, por exemplo:</p>
  <p class="code">switch (keyboard_key)<br />
    {<br />
        case vk_left:<br />
        case ord(&quot;A&quot;):<br />
            x -= 4;<br />
        break;<br />
    <br />
        case vk_right:<br />
        case ord(&quot;D&quot;):<br />
            x += 4;<br />
        break;<br />
    <br />
        case vk_up:<br />
        case ord(&quot;W&quot;):<br />
            y -= 4;<br />
        break;<br />
    <br />
        case vk_down:<br />
        case ord(&quot;S&quot;):<br />
            y += 4;<br />
        break;<br />
    }
  </p>
  <p>O código acima usa <span class="inline">switch</span> para verificar um evento de teclado e depois compara isso com cada <span class="inline">case</span> listado. Se ele atender a algum dos valores requeridos, então o código correspondente é executado. Observe como o <span class="inline">switch</span> pode verificar vários <span class="inline">cases</span> e executar o código até o próximo <span class="inline">break</span>, para permitir que várias teclas sejam usadas para obter o mesmo resultado.</p>
  <p>Cada <span class="inline">case</span> pode ter seu próprio código, assim você pode criar uma espécie de sistema de &quot;herança&quot; onde um caso executa seu próprio código e depois o código para o próximo caso também.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">A seguir: <a href="break.htm"><span class="notranslate">break</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
switch
-->
  <!-- TAGS
switch
-->
</body>
</html>