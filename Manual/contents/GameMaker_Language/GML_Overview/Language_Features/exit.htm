<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>saída</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the exit function" />
  <meta name="rh-index-keywords" content="exit" />
  <meta name="search-keywords" content="exit" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>saída</h1>
  <p>A declaração <span class="inline">exit</span> tem a seguinte sintaxe:</p>
  <p class="code">exit;</p>
  <p><span class="inline">exit</span> simplesmente termina a execução da <a href="../Script_Functions.htm">função de script</a> atual, <a href="../Method_Variables.htm"><span class="notranslate">method</span></a>ou <a href="../../../The_Asset_Editors/Object_Properties/Object_Events.htm"><span class="notranslate">event</span></a>. Note que há uma pequena diferença no uso aqui, dependendo do escopo:</p>
  <ul class="colour">
    <li>Se você usar <span class="inline">exit</span> em uma função ou método <span class="notranslate">script</span>, ele simplesmente sairá da função e retornará ao código que chamou a função.</li>
    <li>Se você usar <span class="inline">exit</span> em um bloco de código dentro de um evento do objeto, ele sairá do <i>evento inteiro</i>, mesmo que haja vários blocos de código separados depois que <span class="inline">exit</span> tiver sido chamado.</li>
    <li>Se você usar <span class="inline">exit</span> em um evento dos pais e ligar para esse evento usando <a href="../../GML_Reference/Asset_Management/Objects/Object_Events/event_inherited.htm"><span class="inline">event_inherited()</span></a> em uma criança <span class="notranslate">object</span>, somente o evento dos pais sairá e o evento da criança (que se chamou <span class="inline">event_inherited()</span>) continuará.</li>
  </ul>
  <p>Quando usado em um evento, <span class="inline">exit</span> é normalmente usado para evitar que uma instância execute qualquer outro código quando uma condição específica tiver sido atendida (ou não). O código abaixo descreve um exemplo de como ele poderia ser usado, neste caso dentro de um Evento de Colisão, embora possa ser usado em qualquer evento.</p>
  <p class="code">if (!visible)<br />
    {<br />
        exit;<br />
    }<br />
    <br />
    other.hp -= attack;<br />
    other.coins -= 4;<br />
    coins += 4;
  </p>
  <p>O código acima verifica se a instância atual não é visível, nesse caso sai do bloco de código, caso contrário, ele vai em frente e executa o resto do código.</p>
  <p class="note"><b>OBSERVAÇÃO</b>: Não termina a execução do jogo. Para isso você precisa usar a função <span style="font-size:1px;"><a href="../../GML_Reference/General_Game_Control/game_end.htm"><span class="inline">game_end()</span></a></span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Language_Features.htm">Características lingüísticas</a></div>
        <div style="float:right">A seguir: <a href="with.htm"><span class="notranslate">with</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
exit
-->
  <!-- TAGS
exit
-->
</body>
</html>