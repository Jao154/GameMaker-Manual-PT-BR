<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Flex Panel Struct Members</title>
  <meta name="generator" content="Adobe RoboHelp 2022" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js" type="module"></script>
  <meta name="rh-authors" content="" />
  <meta name="topic-comment" content="" />
  <meta name="rh-index-keywords" content="Flex_Panels_Styling" />
  <meta name="search-keywords" content="Flex_Panels_Styling" />
  <meta name="template" content="assets/masterpages/Manual_Page.htt" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Flex Panel Struct Members</span></h1>
  <p>When creating a new <span data-keyref="FlexPanel">Flex Panel</span> node using <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_create_node.htm">flexpanel_create_node</a></span>, you can pass a struct containing information on the node and its children, or a string containing JSON for the same data.</p>
  <p>The members that you can include in the struct or JSON string are listed below, and the rest of the page describes each property in detail.</p>
  <ul class="colour">
    <li><span class="inline2">name</span></li>
    <li><span class="inline2">data</span></li>
    <li><span class="inline2">nodes</span></li>
    <li><span class="inline2">width</span>, <span class="inline2">height</span></li>
    <li><span class="inline2">minWidth</span>, <span class="inline2">maxWidth</span>, <span class="inline2">minHeight</span>, <span class="inline2">maxHeight</span></li>
    <li><span class="inline2">left</span>, <span class="inline2">right</span>, <span class="inline2">top</span>, <span class="inline2">bottom</span></li>
    <li><span class="inline2">alignContent</span></li>
    <li><span class="inline2">alignItems</span></li>
    <li><span class="inline2">alignSelf</span></li>
    <li><span class="inline2">aspectRatio</span></li>
    <li><span class="inline2">display</span></li>
    <li><span class="inline2">flex</span></li>
    <li><span class="inline2">flexGrow</span></li>
    <li><span class="inline2">flexShrink</span></li>
    <li><span class="inline2">flexBasis</span></li>
    <li><span class="inline2">flexDirection</span></li>
    <li><span class="inline2">flexWrap</span></li>
    <li><span class="inline2">justifyContent</span></li>
    <li><span class="inline2">direction</span></li>
    <li><span class="inline2">gap</span>, <span class="inline2">gapRow</span>, <span class="inline2">gapColumn</span></li>
    <li><span class="inline2">margin</span>, <span class="inline2">marginLeft</span>, <span class="inline2">marginRight</span>, <span class="inline2">marginTop</span>, <span class="inline2">marginBottom</span>, <span class="inline2">marginStart</span>, <span class="inline2">marginEnd</span>, <span class="inline2">marginHorizontal</span>, <span class="inline2">marginVertical</span></li>
    <li><span class="inline2">padding</span>, <span class="inline2">paddingLeft</span>, <span class="inline2">paddingRight</span>, <span class="inline2">paddingTop</span>, <span class="inline2">paddingBottom</span>, <span class="inline2">paddingStart</span>, <span class="inline2">paddingEnd</span>, <span class="inline2">paddingHorizontal</span>, <span class="inline2">paddingVertical</span></li>
    <li><span class="inline2">border</span>, <span class="inline2">borderLeft</span>, <span class="inline2">borderRight</span>, <span class="inline2">borderTop</span>, <span class="inline2">borderBottom</span>, <span class="inline2">borderStart</span>, <span class="inline2">borderEnd</span>, <span class="inline2">borderHorizontal</span>, <span class="inline2">borderVertical</span></li>
    <li><span class="inline2">start</span>, <span class="inline2">end</span></li>
    <li><span class="inline2">horizontal</span>, <span class="inline2">vertical</span></li>
    <li><span class="inline2">position</span></li>
    <li><span class="inline2">positionType</span></li>
  </ul>
  <p>See <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_create_node.htm">flexpanel_create_node</a></span> for an example on using these members in a struct or JSON string.</p>
  <p>The sections below describe what type of values you can pass for each property in the struct or JSON.</p>
  <p>Each property also has GML functions for setting and getting that property for a node. However, the types of values that a setter function accepts may be different from the type of value you can give it in the struct/JSON. Ensure you read the page for the function you are trying to use for information on its argument types.</p>
  <h2>Basic Properties</h2>
  <h3>Name</h3>
  <p class="note">Struct property: <span class="inline2">name</span><br />
    Functions: <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_set_name.htm">flexpanel_node_set_name</a></span>, <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_get_name.htm">flexpanel_node_get_name</a></span></p>
  <p>You can give each node an optional, non-unique name.</p>
  <h3>Data</h3>
  <p class="note">Struct property: <span class="inline2">data</span><br />
    Function: <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_get_data.htm">flexpanel_node_get_data</a></span></p>
  <p>You can give a node a <span class="inline2">data</span> member which is a struct that can store any data you like. It does not affect the layouts and is for your own use.</p>
  <p>When this member is not supplied, a node is created with an empty data struct, which can be retrieved at any time. The returned struct can be modified and it affects what is returned with future calls to the function (for the same node).</p>
  <h3>Nodes</h3>
  <p class="note">Struct property: <span class="inline2">nodes</span><br />
    Functions: <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_insert_child.htm">flexpanel_node_insert_child</a></span>, <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_remove_child.htm">flexpanel_node_remove_child</a></span>, <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_remove_all_children.htm">flexpanel_node_remove_all_children</a></span>, <span class="inline3_func"><a data-xref="{title}" href="Function_Reference/flexpanel_node_get_child.htm">flexpanel_node_get_child</a></span></p>
  <p>The <span class="inline2">nodes</span> member is an array. This array defines the child nodes under the current node, where each node is a struct with the same format described on this page.</p>
  <p>You can nest nodes inside nodes, e.g.:</p>
  <p> </p>
  <div data-conref="../../../assets/snippets/Flex_Panel_example_create_node_with_struct.hts"> </div>
  <h2>Styling Properties</h2>
  <p class="note"><span data-conref="../../../assets/snippets/Tag_note.hts"> </span> You can also refer to <a href="https://www.yogalayout.dev/docs/styling/">Yoga&#39;s styling documentation</a> for information beyond what this page explains.</p>
  <h3>Width and Height</h3>
  <p class="note">Struct properties: <span class="inline2">width</span>, <span class="inline2">height</span><br />
    Functions: </p>
  <p>These properties define the width and height of the &quot;border box&quot; of the node, which is the collective size of the node&#39;s content, padding and border.</p>
  <p>Both width and height can take the following values:</p>
  <ul class="colour">
    <li><span class="inline2">&quot;auto&quot;</span>: This is the default value. It calculates the width or height of the node based on its content.</li>
    <li>A <span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span> value, e.g. <span class="inline2">64</span>: This defines a size in absolute pixels, however depending on other properties, this may or may not be the <a href="Function_Reference/flexpanel_node_layout_get_position.htm">final size</a> of the node.</li>
    <li>Percentage value as string, e.g. <span class="inline2">&quot;50%&quot;</span>: This defines the width or height as a percentage of its <a data-xref="{text}" href="Flex_Panels.htm#h">Containing Block</a>&#39;s width or height.</li>
  </ul>
  <h3>Min/Max Width and Height</h3>
  <p class="note">Struct properties: <span class="inline2">minWidth</span>, <span class="inline2">maxWidth</span>, <span class="inline2">minHeight</span>, <span class="inline2">maxHeight</span><br />
    Functions: </p>
  <p>These properties define the minimum and maximum size the node must maintain in each dimension. It accepts absolute pixel values (<span data-keyref="Type_Real"><a href="../../GML_Overview/Data_Types.htm" target="_blank">Real</a></span>) and percentage values (<span data-keyref="Type_String"><a href="../../GML_Overview/Data_Types.htm" target="_blank">String</a></span> ending with <span class="inline2">%</span>) (as described in the previous section).</p>
  <h3>Aspect Ratio</h3>
  <p class="note">Struct property: <span class="inline2">aspectRatio</span><br />
    Functions: </p>
  <p>This is the aspect ratio that the node must maintain and corresponds to the horizontal axis.</p>
  <p>For example, an aspect ratio of <span class="inline2">1</span> will result in a square node, <span class="inline2">2</span> will be a 2:1 rectangle where its width is twice as much as its height, <span class="inline2">0.5</span> will make the width half the size of the height.</p>
  <h3>Insets</h3>
  <p class="note">Struct property: <span class="inline2">left</span>, <span class="inline2">right</span>, <span class="inline2">top</span>, <span class="inline2">bottom</span>, <span class="inline2">start</span>, <span class="inline2">end</span><br />
    Functions: </p>
  <p>These properties define the distance between an edge of the node and the same edge of its parent&#39;s node, with positive values moving the node toward the centre, and negative values moving it away from the centre.</p>
  <p>For example, a <span class="inline2">left</span> value of <span class="inline2">20</span> will place the node&#39;s left edge 20 pixels to the right of the parent&#39;s left edge. A <span class="inline2">right</span> value of <span class="inline2">40</span> will move the node so its right edge is 40 pixels to the left of its parent&#39;s, without resizing the node.</p>
  <p><span class="inline2">left</span> and <span class="inline2">top</span> will always take precedence over <span class="inline2">right</span> and <span class="inline2">bottom</span>, respectively. <span class="inline2">start</span> is similar to <span class="inline2">left</span> and <span class="inline2">end</span> is similar to passing <span class="inline2">left</span> with a negative value.</p>
  <h3>Position Type</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Margin</h3>
  <p> </p>
  <p> </p>
  <h3>Padding/Border</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Gap</h3>
  <p> </p>
  <p> </p>
  <h3 id="layout">Layout Direction</h3>
  <p> </p>
  <p> </p>
  <h3>Flex Direction</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Flex Basis</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Flex Grow</h3>
  <p> </p>
  <p>mention flex property</p>
  <p> </p>
  <h3>Flex Shrink</h3>
  <p>mention flex property</p>
  <p> </p>
  <p> </p>
  <h3>Flex Wrap</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Justify Content</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Align Items</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <h3>Align Content</h3>
  <p> </p>
  <p> </p>
  <h3>Display</h3>
  <p> </p>
  <p> </p>
  <p> </p>
  <p> </p>
  <!--</div>-->
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div>Back: <a data-xref="{title}" href="Flex_Panels.htm">Flex Panels</a></div>
        <div>Next: </div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright YoYo Games Ltd. 2024 All Rights Reserved</span></h5>
  </div>
  <!-- KEYWORDS
Flex_Panels_Styling
-->
  <!-- TAGS
Flex_Panels_Styling
-->
</body>
</html>