<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>physics_world_create</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference pagefor physics_world_create" />
  <meta name="rh-index-keywords" content="physics_world_create" />
  <meta name="search-keywords" content="physics_world_create" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>physics_world_create</h1>
  <p>Mesmo que você tenha definido a física para seu <span class="notranslate">objects</span>, sem um mundo para colocá-los no sistema tradicional de colisão <span data-keyref="GameMaker Name">GameMaker</span>, então você precisa desta função para criar o sistema de física para o <span class="notranslate">room</span> especificado
    em um evento <span class="notranslate">object</span>, ou o próprio código de criação do <span class="notranslate">room</span> (também pode ser definido sem o uso de código no editor <span class="notranslate">room</span> ). Esta função associará um &quot;mundo&quot; físico com o <span class="notranslate">room</span> e todas as instâncias criadas no <span class="notranslate">room</span> se comportarão usando
    a física que foi definida para eles e para o próprio mundo.</p>
  <p><img>Você vai notar que temos um argumento que define uma relação entre o tamanho dos pixels e os metros.
    Isto porque as funções físicas funcionam usando medidas do mundo real e, portanto, devemos traduzir coordenadas e tamanhos de pixels para estas medidas do mundo real usando uma &quot;escala de pixel a metro&quot;. Você vai querer ajustar o ajuste da <i>escala de pixels</i> até que o tamanho médio de pixels do <span class="notranslate">objects</span> que você está usando se traduza aproximadamente em física simulada <span class="notranslate">objects</span> de um tamanho apropriado, e acima você pode ver que nós o ajustamos para 32 pixels sendo o equivalente a 1 metro. Deve-se notar que
    que o sistema físico funcionará com proporções maiores e menores, mas que o melhor desempenho é quando as medidas do seu <span class="notranslate">objects</span> no mundo real não forem inferiores a 0,1 metros e não ultrapassarem 50 metros.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">physics_world_create(pixeltometrescale);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descrição</th>
     </tr>
      <tr>
        <td><span class="notranslate">pixeltometrescale</span></td><td><span data-keyref="Type_Real"></span></td>
        <td><span class="notranslate">defines the ratio of pixels on screen to metres in the real world. A ratio of 32:1 will be specified as 1/32 (or 0.03125).</span></td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">physics_world_create(1/32);</p>
  <p>O código acima criará um mundo da física no atual <span class="notranslate">room</span> com uma relação de escala de 32 pixels sendo o equivalente a 1 metro.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="The_Physics_World.htm">O Mundo da Física</a></div>
        <div style="float:right">A seguir: <a href="physics_world_gravity.htm"><span class="notranslate">physics_world_gravity</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
physics_world_create
-->
  <!-- TAGS
physics_world_create
-->
</body>
</html>