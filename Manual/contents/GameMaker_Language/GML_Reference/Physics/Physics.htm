<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Física</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference section for physics functions" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Physics" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Física</h1>
  <p>A integração de uma biblioteca física dedicada ao <span data-keyref="GameMaker Name">GameMaker</span> significa que agora você pode assumir o controle de todos os aspectos do comportamento físico de <span class="notranslate">objects</span> dentro do seu mundo de jogo, particularmente colisões e interação <span class="notranslate">object</span>. O sistema &quot;tradicional&quot; de colisão (o qual o <span data-keyref="GameMaker Name">GameMaker</span> não é padrão) é um sistema &quot;reativo&quot;, onde você verifica se há uma colisão e <i>depois</i> reage a essa colisão com o código que você coloca em cada <span class="notranslate">objects</span>. Isto é bom para jogos simples, mas quando você tem um grande número de <span class="notranslate">objects</span> e tem que codificar como todos eles reagem a diferentes situações no mundo do jogo, rapidamente se torna óbvio que este sistema simplesmente não é suficiente. É quando você tem que recorrer ao sistema de física <span data-keyref="GameMaker Name">GameMaker</span>.</p>
  <p>O sistema físico funciona de uma maneira muito diferente das colisões normais. É mais um sistema &quot;passivo&quot; onde você define uma série de propriedades para seu <span class="notranslate">objects</span> no mundo do jogo, assim como as propriedades do próprio mundo do jogo, antes que qualquer colisão ou interação ocorra. Estas &quot;regras&quot; codificadas irão então governar a maneira como tudo em seu mundo de jogo interage. Desta forma, com alguns códigos simples e a configuração <span class="notranslate">room</span> correta, você pode criar interações muito complexas entre <span class="notranslate">objects</span> e o mundo, que ocorrerão e serão resolvidas <i>sem</i> que você tenha que codificar para cada resultado possível.</p>
  <p>Há algumas coisas que você deve observar ao trabalhar com o mundo da física <span data-keyref="GameMaker Name">GameMaker</span>:</p>
  <ul class="colour">
    <li>O sistema físico existe &quot;à parte&quot; do básico <span class="notranslate">room</span> e a estrutura de instância do <span data-keyref="GameMaker Name">GameMaker</span> significa que seus timings e funções não estão necessariamente ligados à velocidade e ordem de passos do <span class="notranslate">room</span> como tudo mais.</li>
    <li>O sistema físico substitui muitas das funções normais da instância... por exemplo, em vez de definir uma velocidade e uma direção para uma instância, se ela tiver sido declarada como sendo um corpo físico totalmente simulado, você usaria uma <i>força</i> ou <i>impulso</i> para fazê-la se mover no mundo do jogo, ou se ela não estiver habilitada para a física, você mesmo precisará definir as posições x e y. Isto requer um pouco de acostumação, então experimente as funções físicas e conheça como tudo funciona antes de tentar integrá-las em seu projeto.</li>
    <li>Você deve limitar o número de instâncias que são criadas, assim como o número de colisões e grupos de colisão com os quais o mundo da física tem que lidar. Você <i>não pode</i> ter milhares de instâncias, todas com propriedades físicas e colisões e esperar que tudo funcione bem devido ao fato de que a física requer alguns cálculos bastante intensivos, portanto, limite-se e otimize onde for possível.</li>
    <li>Ao configurar as colisões, use os pais o máximo possível, já que o sistema de colisão tem um número limitado de <i>bits de colisão</i> disponíveis para atribuir às instâncias do Box2D para detectar colisões. Por exemplo, se você tiver cinco paredes diferentes <span class="notranslate">objects</span>, não verifique cinco colisões, em vez disso, crie um pai <span class="notranslate">object</span> e atribua-o às cinco paredes e depois tenha UMA verificação de colisão com o pai. As propriedades físicas do <span class="notranslate">objects</span> <i>não</i> são <i>herdadas</i> apenas das colisões. Desta forma, você pode manter seu jogo otimizado e livre de erros.</li>
    <li>Tente não mover instâncias de um ponto do <span class="notranslate">room</span> para outro de nenhuma outra forma além de usar as funções físicas (ou seja: não defina o manual de coordenadas x/y). Embora isto possa ser feito e em algumas circunstâncias possa ser necessário, isto geralmente deve ser evitado devido aos resultados imprevisíveis que pode ter no motor de física, especialmente quando se tenta resolver colisões.</li>
    <li>Deve-se tomar cuidado ao ligar os dispositivos, pois eles podem ser vinculados a <span class="notranslate">objects</span> e instâncias de forma independente. Isto significa que se você amarrar uma fixação a (por exemplo) &quot;o_Wall&quot;, <b>todas as</b> instâncias desse <span class="notranslate">object</span> terão a fixação. Se você quiser vincular uma fixação apenas a uma instância, então use a identificação dessa instância na função apropriada.</li>
    <li>Esteja ciente de que, devido às diferenças na precisão do ponto flutuante, você pode descobrir que versões de seu jogo para diferentes plataformas alvo podem exibir um comportamento sutilmente diferente da versão padrão <span class="notranslate">Windows</span>, embora cada versão seja autoconsistente nas execuções subseqüentes.</li>
    <li>Para evitar instabilidades na simulação física, o Box2D limita a quantidade que um corpo pode girar e traduzir dentro de uma única atualização. As limitações aparentes variam de acordo com a precisão da simulação física de acordo com o número de atualizações e velocidade de atualização do mundo da física, e também de acordo com a escala do mundo da física. Isto significa que (por exemplo) se você tiver uma velocidade de atualização mundial de 60, a velocidade máxima de movimento seria de 20.</li>
  </ul>
  <p>As informações sobre as funções físicas podem ser encontradas nas páginas seguintes:</p>
  <ul class="colour">
    <li><a href="The_Physics_World/The_Physics_World.htm">O mundo da Física</a></li>
    <li><a href="Forces/Forces.htm">Forças</a></li>
    <li><a href="Fixtures/Fixtures.htm">Instalações</a></li>
    <li><a href="Joints/Joints.htm">Juntas</a></li>
    <li><a href="Soft_Body_Particles/Soft_Body_Particles.htm">Partículas macias do corpo</a></li>
    <li><a href="Physics_Variables/Physics_Variables.htm">Variáveis Físicas</a></li>
  </ul>
  <p> </p>
  <p>Finalmente, existem algumas funções especiais de física que podem ser úteis para simulações de física mais avançadas. A primeira é para testes de possíveis colisões em um ponto específico no <span class="notranslate">room</span>, e a segunda é para gerar massa personalizada e propriedades de inércia dentro de uma instância:</p>
  <ul class="colour">
    <li><a href="physics_test_overlap.htm"><span class="notranslate">physics_test_overlap</span></a></li>
    <li><a href="physics_mass_properties.htm"><span class="notranslate">physics_mass_properties</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../GML_Reference.htm">Referência GML</a></div>
        <div style="float:right">A seguir: <a href="../In_App_Purchases/In_App_Purchases.htm">Em Compras App</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Physics
Physics Functions
-->
  <!-- TAGS
physics_functions
-->
</body>
</html>