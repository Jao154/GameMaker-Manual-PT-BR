<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vértice_criate_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_create_buffer" />
  <meta name="rh-index-keywords" content="vertex_create_buffer" />
  <meta name="search-keywords" content="vertex_create_buffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vértice_criate_buffer</h1>
  <p>Com esta função você pode criar um novo <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>. Este é um <i>crescimento</i> especial <span class="notranslate">buffer</span> criado pelo <span data-keyref="GameMaker Name">GameMaker</span> que é pré-formatado para uso na construção de primitivos (para uso com <span class="notranslate">shaders</span>, por exemplo). A função retornará um índice para o <span class="notranslate">buffer</span> que deverá então ser usado em todas as outras chamadas para ele.</p>
  <p>Ao utilizar um <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> criado com esta função você simplesmente chama <a href="vertex_begin.htm"><span class="inline">vertex_begin()</span></a> para começar a atribuir-lhe dados <span class="notranslate">vertex</span> para começar a definir seu primitivo personalizado, que será então mantido no <span class="notranslate">buffer</span> pronto para envio ao <span class="notranslate">shader</span>. O <span class="notranslate">buffer</span> pode ser reutilizado quando necessário (a menos que você tenha usado o <a href="vertex_freeze.htm"><span class="inline">vertex_freeze()</span></a> função), com cada chamada de <a href="vertex_begin.htm"><span class="inline">vertex_begin()</span></a> limpando os dados anteriores <span class="notranslate">buffer</span> prontos para aceitar os novos dados.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">vertex_create_buffer();</p>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer_Vertex">Vertex Buffer ID</span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">v_buff = vertex_create_buffer();</p>
  <p>O código acima criará um novo <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> e armazenará seu cabo na variável &quot;v_buff&quot;.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Primitives_And_Vertex_Formats.htm">Primitivos e <span class="notranslate">Vertex</span> Formatos</a></div>
        <div style="float:right">A seguir: <a href="vertex_create_buffer_ext.htm"><span class="notranslate">vertex_create_buffer_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
vertex_create_buffer
-->
  <!-- TAGS
vertex_create_buffer
-->
</body>
</html>