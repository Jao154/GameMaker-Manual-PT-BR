<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Emissores de áudio</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page outlining the different functions and variables associated with Audio Emitters" />
  <meta name="rh-index-keywords" content="" />
  <meta name="search-keywords" content="Audio Emitters" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1><span data-field="title" data-format="default">Emissores de áudio</span></h1>
  <p>Os emissores de áudio são fornecidos para aumentar a flexibilidade do mecanismo de áudio <span data-keyref="GameMaker Name">GameMaker</span>, e permitem adicionar efeitos em tempo real ao seu áudio <span class="notranslate">assets</span>, como variações de tom e Doppler, bem como a capacidade de posicionar seus sons dentro do espaço de áudio 3D e dar-lhes efeitos de movimento realistas. Todas estas funções são afetadas pela posição do <i>ouvinte</i> dentro do ambiente de áudio e, portanto, será necessário que você use as funções fornecidas para mudar a posição, velocidade e orientação do ouvinte também (veja - <a href="../Audio_Listeners/Audio_Listeners.htm">Ouvintes de áudio</a>).</p>
  <h2>Usando emissores e ouvintes de áudio</h2>
  <p>Ao combinar emissores de áudio e ouvintes, você pode criar um ambiente rico e animado. A configuração deste ambiente pode estar um pouco envolvida, portanto, nesta parte, veremos as coisas que você precisa fazer para configurar um sistema completo com emissores e o ouvinte padrão.</p>
  <h3>Estabelecendo um modelo falloff</h3>
  <p>A primeira coisa a fazer quando se trabalha com emissores de áudio (e com sons reproduzidos usando <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a> em uma posição diferente de <span data-keyref="Position_Origin">(0, 0, 0)</span>) é definir um modelo falloff usando <span class="inline"><a href="../audio_falloff_set_model.htm">audio_falloff_set_model()</a></span>. O modelo falloff determina como o volume do som sendo tocado muda com a distância entre o ouvinte e o emissor.</p>
  <p>Não é estritamente necessário definir isto, mas se você não chamar esta função o modelo utilizado será o padrão <span class="inline">audio_fa<span class="inline"></span>lloff_none. Isto significa que o ganho é ajustado para 1 e assim o volume de um som não muda com a distância entre o ouvinte e o emissor.</p>
  <p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"> </span> Se você quiser ter certeza de que os sons não podem mais ser ouvidos além da distância máxima, você deve definir um dos modelos de falloff que terminam em <span class="inline">_scaled</span>.</p>
  <h3>Atualização do ouvinte</h3>
  <p>O ouvinte de áudio padrão está localizado na posição <span data-keyref="Position_Origin">(0, 0, 0)</span>. <a href="../audio_play_sound.htm"><span class="notranslate">audio_play_sound</span></a> toca um som na posição do ouvinte. Assim, por padrão, os sons que são tocados desta forma serão audíveis através de ambos os alto-falantes, à direita e à esquerda.</p>
  <p>A partir do momento em que a posição relativa do ouvinte ao som ou emissor mudar (seja mudando o ouvinte ou a posição do emissor), este não será mais o caso.</p>
  <p>Ele não tem apenas uma <strong>posição</strong>, mas também uma <strong>orientação</strong>, que pode ser mudada usando <a href="../Audio_Listeners/audio_listener_orientation.htm"><span class="notranslate">audio_listener_orientation</span></a>. Por padrão, no entanto, essa orientação está de cabeça para baixo! A orientação padrão tem o vetor ascendente definido para <span data-keyref="Unit_Vector_Y">(0, 1, 0)</span>, mas como o eixo y do <span data-keyref="GameMaker Name">GameMaker</span> aponta para baixo, isso significa que o ouvinte está de cabeça para baixo no <span class="notranslate">room</span>.</p>
  <p>Tudo o que você espera ouvir no alto-falante esquerdo será realmente ouvido no alto-falante direito e vice-versa (veja a página em <a href="../Audio_Listeners/audio_listener_orientation.htm"><span class="notranslate">audio_listener_orientation</span></a> para uma imagem de como isto parece). Assim, quando você começar a mover emissores e o ouvinte, certifique-se de definir a orientação do ouvinte para o seguinte: </p>
  <p class="code">audio_listener_orientation(0, 0, 1, 0, -1, 0);</p>
  <p>A linha de código acima irá definir a orientação padrão do ouvinte para que ele olhe <strong>para dentro da tela</strong> e <strong>fique virado para cima</strong>. Portanto, isto corresponde a um ouvinte de pé ou sentado no computador olhando para a tela.</p>
  <p>Quando você está criando um jogo de cima para baixo, pode ser mais interessante fazer a orientação do ouvinte seguir a direção que o jogador (ou qualquer outro &quot;ouvinte&quot;) está enfrentando. Isso pode ser feito através da seguinte linha de código: </p>
  <p class="code">audio_listener_orientation(0, 0, 1, lengthdir_x(1, direction), lengthdir_y(1, direction), 0);</p>
  <p>Nesta linha de código, em vez de ter um vetor up que não muda em nada (y = -1 o tempo todo), você o muda com base na direção do jogador. A maneira mais simples de fazer isso é usar o <a href="../../../Maths_And_Numbers/Angles_And_Distance/lengthdir_x.htm"><span class="notranslate">lengthdir_x</span></a> e <a href="../../../Maths_And_Numbers/Angles_And_Distance/lengthdir_y.htm"><span class="notranslate">lengthdir_y</span></a> funções. O olhar para o vetor pode permanecer o mesmo, pois o ouvinte ainda está olhando para a tela.</p>
  <h3>Sons de jogo</h3>
  <p>Após definir um modelo falloff e certificar-se de que a posição e a orientação do ouvinte estão atualizadas corretamente, você pode começar a reproduzir sons no espaço de áudio 3D usando <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a>: </p>
  <p class="code">sound_instance = audio_play_sound_at(snd_Explosion, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>A linha de código acima toca o som &quot;snd_Explosion&quot; <strong>na</strong> posição (x, y, 0) com uma distância de referência de falloff de 100, uma distância máxima de falloff de 300 e um fator de falloff de 1.</p>
  <p>Observe que você pode alterar certas propriedades do som, já que ele pode ser acessado através da variável <span class="inline2">sound_instance</span> acima. Estas são apenas propriedades do próprio som, no entanto, como ganho, offset e tom. Não há como alterar a posição ou velocidade dos sons que são tocados usando <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a>.</p>
  <p>Tudo em resumo, <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a> é uma boa maneira de reproduzir sons simples no espaço de áudio 3D, mas é limitada. Não permite mudar a posição, a velocidade ou os parâmetros de falloff uma vez que o som está sendo reproduzido. A posição e os parâmetros de falloff <i>são</i> passados para a função, mas não podem ser alterados posteriormente.</p>
  <p>Se você quiser ter mais controle sobre como os sons são reproduzidos, use um emissor de áudio.</p>
  <h3>Adicionando um emissor</h3>
  <p>Os emissores de áudio são adicionados usando <a href="audio_emitter_create.htm"><span class="notranslate">audio_emitter_create</span></a>. Eles são colocados em <span data-keyref="Position_Origin">(0, 0, 0)</span>, têm uma velocidade de 0 e configurações padrão de falloff.</p>
  <p class="code">emitter = audio_emitter_create();</p>
  <h3>Atualização de um emissor</h3>
  <p>Um emissor de áudio &quot;emite&quot; um som. Ele pode ser comparado a um alto-falante no mundo real.</p>
  <p>Em comparação com <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a>um emissor pode ter sua posição, velocidade, máscara do ouvinte e parâmetros de falloff alterados após você começar a tocar um som usando <a href="audio_play_sound_on.htm"><span class="notranslate">audio_play_sound_on</span></a>.</p>
  <p>A posição de um emissor pode ser atualizada usando <a href="audio_emitter_position.htm"><span class="notranslate">audio_emitter_position</span></a>. Isto pode ser definido para a posição de uma instância: </p>
  <p class="code">audio_emitter_position(emitter, x, y, 0);</p>
  <p>A velocidade de um emissor é atualizada usando <a href="audio_emitter_velocity.htm"><span class="notranslate">audio_emitter_velocity</span></a>. A maneira mais fácil de ajustar a velocidade é ajustando-a para a <a href="../../Instances/Instance_Variables/hspeed.htm"><span class="notranslate">hspeed</span></a> e <a href="../../Instances/Instance_Variables/vspeed.htm"><span class="notranslate">vspeed</span></a> de uma instância, como esta: </p>
  <p class="code">audio_emitter_velocity(emitter, hspeed, vspeed, 0);</p>
  <p class="note"><span data-conref="../../../../../assets/snippets/Tag_note.hts"> </span> A <i>velocidade de</i> um emissor de áudio é expressa em <i>pixels por passo</i>.<span><span></span></span></p>
  <h3>Emissores de áudio criados pelo <span data-keyref="GameMaker Name">GameMaker</span></h3>
  <p>Ao trabalhar com <a href="../../Sequences/Sequences.htm">Sequences</a>, o <span data-keyref="GameMaker Name">GameMaker</span> adiciona a criação de um emissor de áudio para cada faixa de áudio<span><span class="inline2">(seqtracktype_audio</span>) no <span class="notranslate">sequence</span>. </span>A identificação destes emissores pode ser encontrada na propriedade <span class="inline2">ActiveTracks[i].emitterIndex</span> <a href="../../Sequences/Sequence_Structs/The_Sequence_Instance_Struct.htm">da Sequence Instance</a>.</p>
  <p><span data-keyref="GameMaker Name">O GameMaker</span> atualiza automaticamente a posição de tal emissor. Ele não atualiza a velocidade de um emissor de faixa de áudio, mas isto é algo que você mesmo pode fazer ligando para <a href="audio_emitter_velocity.htm"><span class="notranslate">audio_emitter_velocity</span></a> em um dos <a href="../../Sequences/Sequence_Events_Moments_Broadcast.htm">Eventos da Etapa Sequência</a>.</p>
  <h3>Tocando sons em um emissor</h3>
  <p>Os sons podem ser reproduzidos <strong>em</strong> um emissor usando <a href="audio_play_sound_on.htm"><span class="notranslate">audio_play_sound_on</span></a>: </p>
  <p class="code">sound_instance = audio_play_sound_on(snd_Explosion, x, y, 0, 100, 300, 1, true, 1);<br />
    <span></span>
  </p>
  <h3>Manter um registro das instâncias sonoras de reprodução</h3>
  <p>Toda vez que você chama um de <a href="../audio_play_sound.htm"><span class="notranslate">audio_play_sound</span></a>, <a href="../audio_play_sound_at.htm"><span class="notranslate">audio_play_sound_at</span></a> ou <a href="audio_play_sound_on.htm"><span class="notranslate">audio_play_sound_on</span></a> você cria uma nova <strong>instância</strong> sonora.</p>
  <p>A instância sonora que está sendo tocada pode não ser audível por várias razões, tais como sua posição estar muito distante do ouvinte. Mas ela sempre existe.</p>
  <p>Se você quiser alterar as propriedades da instância sonora, você deve atribuir o valor de retorno a uma variável, como esta: </p>
  <p class="code">sound_instance = audio_play_sound_at(snd_Explosion, x, y, 0, 100, 300, 1, true, 1);</p>
  <p>Em certo momento, você pode ter algumas instâncias sonoras tocando. Nesse caso, você poderia armazená-las em uma matriz como a seguir: </p>
  <p class="code">var _x = random(room_width);<br />
    var _y = random(room_height);<br />
    var _new_sound_instance = audio_play_sound_at(snd_Bird, _x, _y, 0, 200, 400, true, 10);<br />
    array_push(bird_sounds, _new_sound_instance);</p>
  <p>Toda vez que o código acima é executado, a identificação da instância sonora recém-criada é adicionada ao conjunto de <span class="inline2">sons_da_ave</span>.</p>
  <p>Desta forma, você pode acompanhar todas as instâncias sonoras (de <span class="inline">snd_Bird</span> no exemplo acima) que estão tocando.</p>
  <p class="note"><span data-conref="../../../../../assets/snippets/Tag_important.hts"> </span> Que um som está sendo &quot;tocado&quot; não significa necessariamente que ele será ouvido pelo ouvinte. Os sons que pararam de tocar, que estão muito longe do ouvinte ou que têm um conjunto de ganho muito baixo (ou que são tocados em um emissor que tem um conjunto de ganho muito baixo) não serão audíveis.</p>
  <h3>Ouvintes adicionais</h3>
  <p>Se você quiser usar ouvintes adicionais, você deve primeiro verificar se o sistema suporta múltiplos ouvintes usando <a href="../Audio_Listeners/audio_get_listener_count.htm"><span class="notranslate">audio_get_listener_count</span></a>.</p>
  <p>Se houver mais de um ouvinte, <a href="../Audio_Listeners/audio_get_listener_info.htm"><span class="notranslate">audio_get_listener_info</span></a> pode ser usado para obter o nome, a máscara do ouvinte e o índice de cada ouvinte.</p>
  <p>Se você conhece o índice do ouvinte, você pode mudar suas configurações (posição, velocidade e orientação) usando as funções que começam com <span class="inline">audio_listener_set_</span> em vez de <span class="inline">audio_listener_</span>.</p>
  <h2>Funções</h2>
  <p>As seguintes funções existem para lidar com emissores de áudio:</p>
  <ul class="colour">
    <li><a href="audio_emitter_create.htm"><span class="notranslate">audio_emitter_create</span></a></li>
    <li><a href="audio_emitter_exists.htm"><span class="notranslate">audio_emitter_exists</span></a></li>
    <li><a href="audio_emitter_position.htm"><span class="notranslate">audio_emitter_position</span></a></li>
    <li><a href="audio_emitter_velocity.htm"><span class="notranslate">audio_emitter_velocity</span></a></li>
    <li><a href="audio_emitter_falloff.htm"><span class="notranslate">audio_emitter_falloff</span></a></li>
    <li><a href="audio_emitter_gain.htm"><span class="notranslate">audio_emitter_gain</span></a></li>
    <li><a href="audio_emitter_pitch.htm"><span class="notranslate">audio_emitter_pitch</span></a></li>
    <li><a href="audio_emitter_set_listener_mask.htm"><span class="notranslate">audio_emitter_set_listener_mask</span></a></li>
    <li><a href="audio_emitter_free.htm"><span class="notranslate">audio_emitter_free</span></a></li>
    <li><a href="audio_play_sound_on.htm"><span class="notranslate">audio_play_sound_on</span></a></li>
    <li><a href="audio_emitter_get_gain.htm"><span class="notranslate">audio_emitter_get_gain</span></a></li>
    <li><a href="audio_emitter_get_pitch.htm"><span class="notranslate">audio_emitter_get_pitch</span></a></li>
    <li><a href="audio_emitter_get_x.htm"><span class="notranslate">audio_emitter_get_x</span></a></li>
    <li><a href="audio_emitter_get_y.htm"><span class="notranslate">audio_emitter_get_y</span></a></li>
    <li><a href="audio_emitter_get_z.htm"><span class="notranslate">audio_emitter_get_z</span></a></li>
    <li><a href="audio_emitter_get_vx.htm"><span class="notranslate">audio_emitter_get_vx</span></a></li>
    <li><a href="audio_emitter_get_vy.htm"><span class="notranslate">audio_emitter_get_vy</span></a></li>
    <li><a href="audio_emitter_get_vz.htm"><span class="notranslate">audio_emitter_get_vz</span></a></li>
    <li><a href="audio_emitter_get_listener_mask.htm"><span class="notranslate">audio_emitter_get_listener_mask</span></a></li>
  </ul>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Audio.htm">Áudio</a></div>
        <div style="float:right">A seguir: <a href="../Audio_Listeners/Audio_Listeners.htm">Ouvintes de áudio</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Audio Emitters
-->
  <!-- TAGS
audio_emitter_functions
-->
</body>
</html>