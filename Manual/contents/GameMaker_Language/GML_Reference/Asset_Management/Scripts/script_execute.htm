<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>script_execute</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page explaining the function script_execute" />
  <meta name="rh-index-keywords" content="script_execute" />
  <meta name="search-keywords" content="script_execute" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>script_execute</h1>
  <p>Esta função foi originalmente projetada para chamar <i>ativos</i> <span class="notranslate">script</span> de forma dinâmica, mas com a introdução de funções definidas pelo usuário ela pode agora ser usada de duas maneiras:</p>
  <ul class="colour">
    <li>A primeira maneira é apoiar o <b>legado</b> <span class="notranslate">scripts</span>, onde cada <span class="notranslate">script</span> era uma única função e o título do <span class="notranslate">script</span> era também o nome da função. Utilizada desta forma, funcionará como antes e executará um usuário criado <span class="notranslate">script</span> <span class="notranslate">asset</span> e passará os argumentos dados para ele. Note que, neste caso, ele não está realmente chamando o <i>script</i>, mas a <i>função script</i> com o mesmo nome dentro do <span class="notranslate">script</span>. <span style="text-align: justify;"></span></li>
    <li><span style="text-align: justify;">A segunda maneira é chamar uma função de um <span class="notranslate">script</span> <span class="notranslate">asset</span> que contém múltiplas funções. Neste caso, você forneceria o nome da função e os argumentos que ela requer, em vez do nome <span class="notranslate">script</span> <span class="notranslate">asset</span>. Note que isto funcionará apenas para <a href="../../../GML_Overview/Script_Functions.htm">funções de script</a> e não para <a href="../../../GML_Overview/Method_Variables.htm">métodos</a>, pois apenas as funções <span class="notranslate">script</span> têm um ID <span class="notranslate">script</span> atribuído a elas.</span></li>
  </ul>
  <p><span style="text-align: justify;"></span>Embora esta função tenha sido projetada principalmente para suporte de legado, ela não é depreciada, pois ainda tem seu lugar em situações de rede e chamadas de procedimentos remotos. Também vale a pena notar que esta função é lenta e sua utilização pode afetar muito negativamente o desempenho.</p>
  <p class="note"><span class="note">NOTA</span>: Esta função não pode ser usada com funções embutidas.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">script_execute(scr, arg0, arg1, arg2..., etc...);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">scr</span></td>
        <td><span data-keyref="Type_Asset_Script"><a href="../../../../../The_Asset_Editors/Scripts.htm" target="_blank">Ativo Script</a></span> ou <span data-keyref="Type_Function_Script"><a href="../../../../../GameMaker_Language/GML_Overview/Script_Functions.htm" target="_blank">Função Script</a></span></td>
        <td><span class="notranslate">The function/script that you want to call</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">arg0, arg1, arg2..., etc...</span></td>
        <td><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variável</a></span></td>
        <td><span class="notranslate">The different arguments that you want to pass through to the function/script</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Any"><a href="../../../../../GameMaker_Language/GML_Overview/Data_Types.htm#variable" target="_blank">Variable</a></span> (Will depend on the return value from the script/function being called)</p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">script_execute(choose(move_up, move_down, move_left, move_right), irandom(5));</p>
  <p>O código de exemplo acima usará <span class="inline">script_execute</span> para escolher uma das quatro funções definidas pelo usuário (neste caso, relacionadas ao movimento) e passar um inteiro aleatório para ele como primeiro argumento.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Scripts.htm">Roteiros</a></div>
        <div style="float:right">A seguir: <a href="script_execute_ext.htm"><span class="notranslate">script_execute_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
script_execute
-->
  <!-- TAGS
script_execute
-->
</body>
</html>