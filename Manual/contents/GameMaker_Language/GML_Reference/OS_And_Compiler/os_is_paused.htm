<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>os_is_paused</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../assets/css/default.css" type="text/css" />
  <script src="../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference page for os_is_paused" />
  <meta name="rh-index-keywords" content="os_is_paused" />
  <meta name="search-keywords" content="os_is_paused" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>os_is_paused</h1>
  <p>Ao desenvolver para dispositivos móveis, você precisa ter uma maneira de verificar se o dispositivo ainda está ou não focado em seu jogo, especialmente como se seu jogo estivesse em um dispositivo <span class="notranslate">iOS</span>, <span class="notranslate">Android</span> ou <span class="notranslate">Windows Phone</span>, então ele pode ser interrompido por chamadas telefônicas e outros aplicativos. Você pode usar esta função para verificar se o dispositivo está ou não em pausa.</p>
  <p>Vale notar que esta função executará qualquer código que esteja contido dentro do bloco de código nos dispositivos, mas então o <span data-keyref="GameMaker Name">GameMaker</span> será pausado imediatamente após como o dispositivo <span class="notranslate">caches</span> o jogo como um processo de fundo. Portanto, se você tiver algo como o código de exemplo fornecido abaixo, a instância a ser criada não aparecerá ou executará nenhum de seus eventos <i>até que o jogo tenha sido reiniciado do estado em cache</i>. Isto significa que você pode preferir que a função <span class="inline">os_is_paused</span> chame um alarme e depois no evento de alarme (que será definido quando o dispositivo for pausado, mas não será executado até que não seja pausado) crie um menu de pausa, reinicie a música etc...</p>
  <p>Se você estiver usando esta função em <span class="notranslate">Windows</span>, <span class="notranslate">Ubuntu</span> (<span class="notranslate">Linux</span>), plataformas MacOS ou HTML5, então a função é alternada apenas por <b>um passo</b> para <span class="inline">true</span> quando o jogo perde o foco, e então ele retornará <span class="inline">false</span> novamente até que o jogo retorne ao foco (e o perca novamente). Isto porque estas plataformas não <span class="notranslate">cache</span> aplicativos e jogos, e assim estes continuarão a funcionar em segundo plano.</p>
  <p class="note"><b>NOTA</b>: Nos dispositivos móveis, os sons e a música serão interrompidos quando o os for pausado. Eles <b>não</b> serão reiniciados novamente, a menos que você os inicie especificamente com a função apropriada.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">os_is_paused()</p>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Bool"></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">if os_is_paused()<br />
    {<br />
        if (!instance_exists(obj_PauseMenu)) <br />
        {<br />
            instance_create_layer(0, 0, &quot;Controllers&quot;, obj_PauseMenu);<br />
        }<br />
    }</p>
  <p>O código acima verifica se o jogo foi pausado, e se depois criou uma instância do &quot;obj_PauseMenu&quot; <span class="notranslate">object</span> se já não existir nenhum.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="OS_And_Compiler.htm">OS E Compilador</a></div>
        <div style="float:right">A seguir: <a href="os_is_network_connected.htm"><span class="notranslate">os_is_network_connected</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
os_is_paused
-->
  <!-- TAGS
os_is_paused
-->
</body>
</html>