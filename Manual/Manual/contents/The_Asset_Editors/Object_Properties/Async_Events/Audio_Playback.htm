<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>Reprodução de áudio</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Page detailing the Audio Playback async event." />
  <meta name="rh-index-keywords" content="Objects - Async Audio Playback Event" />
  <meta name="search-keywords" content="Audio Playback,ev_audio_playback" />
  <link rel="stylesheet" type="text/css" href="../../../assets/css/default.css" />
  <script src="../../../assets/scripts/main_script.js"></script>
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>Reprodução de áudio</h1>
  <p><img>Este evento só pode ser acionado pelas funções de reprodução em <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/Audio_Buffers.htm">fila de áudio</a> e retornará um <a href="../../../GameMaker_Language/GML_Reference/Data_Structures/DS_Maps/DS_Maps.htm">DS Map</a> armazenado na variável <a href="../../../GameMaker_Language/GML_Overview/Variables/Builtin_Global_Variables/async_load.htm"> <span class="inline">async_load</span></a>,
    contendo diferentes pares de chaves/valores relacionados com o áudio <span class="notranslate">queue</span> que desencadeou o evento. O evento é acionado por uma <a class="glossterm" data-glossterm="ligação de retorno" href="#">chamada de retorno</a> quando você selecionou um áudio <span class="notranslate">queue</span> para reproduzir e um
    <span class="notranslate">buffer</span> nesse áudio <span class="notranslate">queue</span> está terminado de tocar.</p>
  <p>As seguintes chaves estarão disponíveis no mapa DS:</p>
  <ul class="dropspotlist">
    <li class="dropspot">&quot;<span class="inline">queue_id</span>&quot; - o índice <span class="notranslate">queue</span> para o <span class="notranslate">queue</span> que terminou de tocar, como retornado pela função <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_create_play_queue.htm"><span class="inline">audio_create_play_queue()</span></a>.</li>
    <li class="dropspot">&quot;<span class="inline">buffer_id</span>&quot; - o ID <span class="notranslate">buffer</span> para o <a href="../../../GameMaker_Language/GML_Reference/Buffers/Buffers.htm">buffer</a> que não está mais sendo jogado.</li>
    <li class="dropspot">&quot;<span class="inline">queue_shutdown</span>&quot; - isto é ajustado para 0 durante a reprodução normal e 1 quando o evento é recebido porque <a href="../../../GameMaker_Language/GML_Reference/Asset_Management/Audio/Audio_Buffers/audio_free_play_queue.htm"><span class="inline">audio_free_play_queue()</span></a> tem
      foi chamado. Quando isto estiver definido em 1, você não quer <span class="notranslate">queue</span> para obter mais dados.</li>
  </ul>
  <p>Como um áudio <span class="notranslate">queue</span> pode ser criado a partir de múltiplos <span class="notranslate">buffers</span>, este evento pode ser acionado várias vezes para um <span class="notranslate">queue</span> ao final de cada seção de áudio buffer_id, daí a chave &quot;buffer_id&quot;.</p>
  <p class="note"><strong>NOTA</strong>: A variável <span class="inline" style="font-size: 14px">async_load</span> só é válida nos eventos assíncronos, pois o mapa DS que aponta é criado no início do evento, depois apagado novamente no final, com isto
    Entretanto, todas as outras estruturas de dados criadas a partir do evento devem ser limpas usando as funções apropriadas.</p>
  <p>No exemplo de uso dado abaixo, criaremos um áudio <span class="notranslate">queue</span> com 10 sons de áudio em buffer adicionados a ele e, em seguida, tocaremos a fila:</p>
  <p class="code">audio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);<br/> for (var i = 0; i &lt; 10; i++;)<br/>    {<br/>    audio_queue_sound(audio_queue, audio_buffer[i], 0, buffer_get_size(audio_buffer[i]));<br/>    }<br/> audio_play_sound(audio_queue,
    0, true);</p>
  <p>Cada passo do jogo, agora que a gravação é detectada, desencadeará um evento de gravação de áudio assíncrono onde você pode lidar com a entrada gravada algo como isto:</p>
  <p class="code">var queue = async_load[? &quot;queue_id&quot;];<br/> var num = 0;<br/> if queue = audio_queue<br/>    {<br/>    for (var i = 0; i &lt; 10; i++;)<br/>       {<br/>       if async_load[? &quot;buffer_id&quot;] == audio_buffer[i]<br/>          {<br/>  buffer_seek(audio_buffer[i],
    buffer_seek_start, 0);<br/>          num = i;<br/>          }<br/>       }<br/>    if num == 9<br/>       {<br/>       audio_stop_sound(audio_queue);<br/>       audio_free_play_queue(audio_queue);<br/>       }<br/>  }
  </p>
  <p>Aqui verificamos o ID <span class="notranslate">queue</span> e se é o que queremos, verificamos então o ID <span class="notranslate">buffer</span> para ver qual <span class="notranslate">buffer</span> acabou de ser jogado. Também definimos então um var local para esse valor de índice para verificação posterior e voltamos ao <span class="notranslate">buffer</span> para o início
    som. Uma vez que nossa variável local chega a 9, indicando que o <span class="notranslate">queue</span> terminou, paramos a reprodução do som e liberamos o <span class="notranslate">queue</span>.</p>
  <p> </p>
  <div class="droptext" data-targetname="drop-down"> </div>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="../Async_Events.htm">Eventos Async</a></div>
        <div style="float:right">A seguir: <a href="Audio_Recording.htm">Gravação de áudio</a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
Asynchronous Audio Playback Event
ev_audio_playback
Audio Playback
-->
  <!-- TAGS
ev_audio_playback
-->

</body></html>