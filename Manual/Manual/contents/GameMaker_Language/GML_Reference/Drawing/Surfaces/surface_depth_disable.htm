<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>superfície_depth_disable</title>
  <meta name="generator" content="Adobe RoboHelp 2019" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for surface_depth_disable" />
  <meta name="rh-index-keywords" content="surface_depth_disable" />
  <meta name="search-keywords" content="surface_depth_disable" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>superfície_depth_disable</h1>
  <p>Esta função desabilita a geração automática de profundidade <span class="notranslate">buffer</span> para <i>todas as</i> superfícies que são criadas após ter sido desabilitada. Normalmente todas as superfícies têm profundidade <span class="notranslate">buffers</span>, portanto, se você desenhar em 3D <span class="notranslate">objects</span> para elas, então ele as classificará corretamente pela profundidade em
    a fim de manter a paridade funcional entre renderização para superfícies e renderização para o verso <span class="notranslate">buffer</span>, porém alocando profundidade <span class="notranslate">buffers</span> essencialmente dobra a quantidade de memória necessária para superfícies, o que poderia ser uma sobrecarga excessiva e desnecessária
    especialmente se seu jogo for muito intenso em termos de memória, e para jogos 2D eles geralmente não são necessários.</p>
  <p>Para usar esta função você a chamaria <i>antes de</i> criar uma superfície, e então você pode ativá-la novamente depois (se necessário). Todas as superfícies criadas quando a profundidade <span class="notranslate">buffer</span> é desativada deixarão de usar uma profundidade <span class="notranslate">buffer</span> ao serem atraídas para, isto resulta
    nas coisas que estão sendo atraídas para a superfície tendo paridade de profundidade. As imagens abaixo ilustram isto na prática:</p>
  <p><img>Na imagem acima, estamos desenhando um retângulo e um triângulo usando um <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> em 3D. O
    coordenadas para o triângulo vermelho o coloca atrás do retângulo verde, mas o código para desenhar o triângulo é chamado <i>após</i> o código para o retângulo, e quando a profundidade <span class="notranslate">buffer</span> é habilitada, o triângulo ainda é desenhado atrás do retângulo
    já que a profundidade 3D está sendo respeitada. Entretanto, quando desativamos a profundidade <span class="notranslate">buffer</span> para a superfície, apenas a ordem de código é respeitada e assim o triângulo é desenhado sobre o retângulo.</p>
  <p class="note"><b>NOTA</b>: Para preservar corretamente a profundidade em 3D ao usar superfícies, não só você deve ter a profundidade <span class="notranslate">buffer</span> habilitada, mas também deve ter a escrita z e o teste z habilitados. Veja as funções <a href="../GPU_Control/gpu_get_ztestenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_ztestenable()</span></a>    e <a href="../GPU_Control/gpu_get_zwriteenable.htm"><span class="inline"><span style="font-size:14px;">gpu_set_zwriteenable()</span></a> para mais informações.</p>
  <p class="note"><b>NOTA</b>: Se seu jogo é 100% 2D ou se você sabe que não precisa de uma profundidade de superfície <span class="notranslate">buffer</span>, então deve ser bom simplesmente chamar esta função uma vez no início do jogo para desativar o <span class="notranslate">buffer</span>.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">surface_depth_disable(disable);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th><th>Tipo</th>
        <th>Descrição</th>
     </tr>
      <tr>
        <td><span class="notranslate">disable</span></td><td><span data-keyref="Type_Bool"></span></td>
        <td><span class="notranslate">If set to <span class="inline">true</span> o tampão de profundidade será desativado para superfícies criadas.</td>
     </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_Void"></span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">var _depth_setting = surface_get_depth_disable();<br/> surface_depth_disable(false);
    <br/> surface_with_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(true);
    <br/> surface_without_depth = surface_create(room_width, room_height);<br/> surface_depth_disable(_depth_setting);
  </p>
  <p>O código acima armazena a configuração atual de profundidade <span class="notranslate">buffer</span> em uma variável e depois cria duas superfícies, uma com o buffer de profundidade ativado e outra sem, antes de restaurar a configuração original novamente.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Surfaces.htm">Superfícies</a></div>
        <div style="float:right">A seguir: <a href="surface_get_height.htm"><span class="notranslate">surface_get_height</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2021 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
surface_depth_disable
-->
  <!-- TAGS
surface_depth_disable
-->
</body>
</html>