<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>vertex_create_buffer_from_buffer</title>
  <meta name="generator" content="Adobe RoboHelp 2020" />
  <link rel="stylesheet" href="../../../../assets/css/default.css" type="text/css" />
  <script src="../../../../assets/scripts/main_script.js"></script>
  <meta name="rh-authors" content="Mark Alexander" />
  <meta name="topic-comment" content="Reference for vertex_create_buffer_from_buffer" />
  <meta name="rh-index-keywords" content="vertex_create_buffer_from_buffer" />
  <meta name="search-keywords" content="vertex_create_buffer_from_buffer" />
  <meta name="is_pure" content="true" />
</head>
<body>
  <!--<div class="body-scroll" style="top: 150px;">-->
  <h1>vertex_create_buffer_from_buffer</h1>
  <p>Como com a função <a href="vertex_create_buffer.htm"><span class="inline">vertex_create_buffer()</span></a>Esta função criará um novo <span class="notranslate">vertex</span> <span class="notranslate">buffer</span>, somente agora os dados <span class="notranslate">vertex</span> que armazena são copiados do regular <span class="notranslate">buffer</span> que é especificado como a fonte. O <span class="notranslate">buffer</span> criado é um <i>crescimento</i> especial <span class="notranslate">buffer</span> que é pré-formatado com o formato <span class="notranslate">vertex</span> para a construção de primitivos para uso com (por exemplo) <span class="notranslate">shaders</span>. Esta função requer que se forneça o ponteiro a um <span class="notranslate">buffer</span> regular previamente criado, e um formato <span class="notranslate">vertex</span> que deve ser aplicado aos dados copiados.</p>
  <p> </p>
  <h4>Sintaxe:</h4>
  <p class="code">vertex_create_buffer_from_buffer(buffer, format);</p>
  <table>
    <tbody>
      <tr>
        <th>Argumento</th>
        <th>Tipo</th>
        <th>Descrição</th>
      </tr>
      <tr>
        <td><span class="notranslate">buffer</span></td>
        <td><span data-keyref="Type_ID_Buffer">Identificação do tampão</span></td>
        <td><span class="notranslate">The buffer to create the vertex buffer from.</span></td>
      </tr>
      <tr>
        <td><span class="notranslate">format</span></td>
        <td><span data-keyref="Type_Constant_Draw_Primitive_Type">Constante do tipo primitivo</span></td>
        <td><span class="notranslate">The primitive vertex format to use.</span></td>
      </tr>
    </tbody>
  </table>
  <p> </p>
  <h4>Devoluções:</h4>
  <p class="code"><span data-keyref="Type_ID_Buffer_Vertex">Vertex Buffer ID</span></p>
  <p> </p>
  <h4>Exemplo:</h4>
  <p class="code">vertex_format_begin();<br />
    vertex_format_add_position_3d();<br />
    vertex_format_add_colour();<br />
    vertex_format_add_textcoord();<br />
    var my_format = vertex_format_end();<br />
    v_buff = vertex_create_buffer_from_buffer(global.modelBuff, myFormat);</p>
  <p>O código acima criará um novo formato <span class="notranslate">vertex</span> e em seguida criará um novo <span class="notranslate">vertex</span> <span class="notranslate">buffer</span> a partir de um formato regular anteriormente criado <span class="notranslate">buffer</span>, aplicando a ele o formato personalizado <span class="notranslate">vertex</span>.</p>
  <p> </p>
  <p> </p>
  <p> </p>
  <div class="footer">
    <div class="buttons">
      <div class="clear">
        <div style="float:left">Voltar: <a href="Primitives_And_Vertex_Formats.htm">Primitivos e <span class="notranslate">Vertex</span> Formatos</a></div>
        <div style="float:right">A seguir: <a href="vertex_create_buffer_from_buffer_ext.htm"><span class="notranslate">vertex_create_buffer_from_buffer_ext</span></a></div>
      </div>
    </div>
    <h5><span data-keyref="Copyright Notice">© Copyright <span class="notranslate">YoYo Games Ltd.</span> 2022 Todos os direitos reservados</span></h5>
  </div>
  <!-- KEYWORDS
vertex_create_buffer_from_buffer
-->
  <!-- TAGS
vertex_create_buffer_from_buffer
-->
</body>
</html>